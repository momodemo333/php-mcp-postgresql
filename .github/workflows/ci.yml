name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.3']
        postgres-version: ['13', '15']
    
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: pdo, pdo_pgsql, mbstring
        coverage: none
        tools: composer:v2
      env:
        COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Verify PHP Installation
      run: |
        php -v
        php -m | grep -E "(pdo|pgsql)"
        composer --version
    
    - name: Install PostgreSQL client
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client
    
    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Initialize test database
      env:
        PGPASSWORD: testpass
      run: |
        psql -h localhost -U testuser -d testdb -f tests/fixtures/init.sql
    
    - name: Run basic tests
      env:
        PGSQL_HOST: localhost
        PGSQL_PORT: 5432
        PGSQL_USER: testuser
        PGSQL_PASS: testpass
        PGSQL_DB: testdb
        ALLOW_INSERT_OPERATION: true
        ALLOW_UPDATE_OPERATION: true
        ALLOW_DELETE_OPERATION: true
      run: |
        php tests/test_connection.php
        php tests/test_mcp_server.php
    
    - name: Run PHPUnit tests
      if: matrix.php-version == '8.3'
      env:
        PGSQL_HOST: localhost
        PGSQL_PORT: 5432
        PGSQL_USER: testuser
        PGSQL_PASS: testpass
        PGSQL_DB: testdb
      run: |
        if [ -f vendor/bin/phpunit ] && [ -f phpunit.xml ]; then
          vendor/bin/phpunit --coverage-text
        else
          echo "PHPUnit not configured for this project, skipping unit tests"
        fi

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: pdo, pdo_pgsql, mbstring
        ini-values: memory_limit=256M
        coverage: none
        tools: composer:v2
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Check code style (if configured)
      run: |
        if [ -f vendor/bin/phpcs ]; then
          vendor/bin/phpcs
        else
          echo "Code style check not configured"
        fi
    
    - name: Static analysis (if configured)
      run: |
        if [ -f vendor/bin/phpstan ]; then
          vendor/bin/phpstan analyse
        else
          echo "Static analysis not configured"
        fi
    
    - name: Verify server can start
      run: |
        timeout 10s php bin/server.php --version || true
        echo "Server version check completed"

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        tools: composer:v2
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Security audit
      run: |
        if [ -f composer.lock ]; then
          composer audit || echo "Security audit completed with warnings"
        fi